SELECT t1.repo.name AS GhRepo, CAST(created_at AS DATE) AS date1, actor.id AS actor_id, actor.login AS actor_login, COUNT(actor.id) AS num_activities,
COUNT(DISTINCT CASE WHEN type = 'PushEvent' THEN id ELSE NULL END) AS num_dist_commits,
COUNT(DISTINCT CASE WHEN type = 'CommitCommentEvent' THEN id ELSE NULL END) AS num_dist_commitcomments,
COUNT(DISTINCT CASE WHEN type = 'PushEvent' THEN actor.id ELSE NULL END) AS num_actors_pushevents,
COUNT(DISTINCT CASE WHEN type = 'CommitCommentEvent' THEN actor.id ELSE NULL END) AS num_actors_pusheventscomment,
COUNT(DISTINCT CASE WHEN type = 'PullRequestEvent' AND JSON_EXTRACT(payload, '$.action') = '"opened"' THEN JSON_EXTRACT(payload, '$.number') ELSE NULL END) AS num_dist_pullreqopened,
COUNT(DISTINCT CASE WHEN type = 'PullRequestEvent' AND JSON_EXTRACT(payload, '$.action') = '"closed"' THEN JSON_EXTRACT(payload, '$.number') ELSE NULL END) AS num_dist_pullreqclosed,
COUNT(DISTINCT CASE WHEN type = 'PullRequestEvent' THEN JSON_EXTRACT(payload, '$.number') ELSE NULL END) AS num_dist_pullreqAll,
COUNT(DISTINCT CASE WHEN type = 'PullRequestReviewCommentEvent' THEN id ELSE NULL END) AS num_dist_pullreqcomments,
COUNT(DISTINCT CASE WHEN type = 'PullRequestEvent' THEN actor.id ELSE NULL END) AS num_actors_pullreq,
COUNT(DISTINCT CASE WHEN type = 'PullRequestReviewCommentEvent' THEN actor.id ELSE NULL END) AS num_actors_pullreqcomment,
COUNT(DISTINCT CASE WHEN type = 'PullRequestEvent' AND JSON_EXTRACT(payload, '$.action') = '"opened"' THEN actor.id ELSE NULL END) AS num_actors_pullreq_opened,
COUNT(DISTINCT CASE WHEN type = 'PullRequestEvent' AND JSON_EXTRACT(payload, '$.action') = '"closed"' THEN actor.id ELSE NULL END) AS num_actors_pullreq_closed,
COUNT(DISTINCT CASE WHEN type = 'IssuesEvent' AND JSON_EXTRACT(payload, '$.action') = '"opened"' THEN JSON_EXTRACT(JSON_EXTRACT(payload, '$.issue'), '$.number') ELSE NULL END) AS num_dist_issuesopened,
COUNT(DISTINCT CASE WHEN type = 'IssuesEvent' AND JSON_EXTRACT(payload, '$.action') = '"closed"' THEN JSON_EXTRACT(JSON_EXTRACT(payload, '$.issue'), '$.number') ELSE NULL END) AS num_dist_issuesclosed,
COUNT(DISTINCT CASE WHEN type = 'IssuesEvent' THEN JSON_EXTRACT(JSON_EXTRACT(payload, '$.issue'), '$.number') ELSE NULL END) AS num_dist_issuesAll,
COUNT(DISTINCT CASE WHEN type = 'IssueCommentEvent' THEN id ELSE NULL END) AS num_dist_issuecomments,
COUNT(DISTINCT CASE WHEN type = 'IssuesEvent' THEN actor.id ELSE NULL END) AS num_actors_issues,
COUNT(DISTINCT CASE WHEN type = 'IssueCommentEvent' THEN actor.id ELSE NULL END) AS num_actors_issuescomment,
COUNT(DISTINCT actor.id ) AS num_actors_allevents,
COUNT(DISTINCT CASE WHEN type = 'IssuesEvent' AND JSON_EXTRACT(payload, '$.action') = '"opened"' THEN actor.id ELSE NULL END) AS num_actors_issues_opened,
COUNT(DISTINCT CASE WHEN type = 'IssuesEvent' AND JSON_EXTRACT(payload, '$.action') = '"closed"' THEN actor.id ELSE NULL END) AS num_actors_issues_closed,
COUNT(DISTINCT CASE WHEN type = 'ForkEvent' THEN id ELSE NULL END) AS num_forks_event,
COUNT(DISTINCT CASE WHEN type = 'ForkEvent' THEN actor.id ELSE NULL END) AS num_actors_forks,
COUNT(DISTINCT CASE WHEN type = 'WatchEvent' THEN id ELSE NULL END) AS num_watch_event,
COUNT(DISTINCT CASE WHEN type = 'WatchEvent' THEN actor.id ELSE NULL END) AS num_actors_watch,
COUNT(DISTINCT CASE WHEN type = 'ReleaseEvent' THEN id ELSE NULL END) AS num_releases,
(CASE WHEN type = 'ReleaseEvent' THEN payload ELSE NULL END) AS release_payload
FROM (SELECT * FROM `githubarchive.month.*` WHERE _TABLE_SUFFIX BETWEEN '201501' AND '202403') t1 WHERE t1.repo.name LIKE 'pytorch/%'
GROUP BY GhRepo, date1, actor.id, actor.login, release_payload
ORDER BY GhRepo, date1, actor.id, actor.login, release_payload